#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  source_env_file = '.env.example'
  destination_env_file = '.env'

  unless File.exist?(destination_env_file)
    puts "\n== Preparing .env Placeholder =="

    # Prompt for the token value
    puts "\nWhat is your Flipper Cloud Token? (Go to the 'Tokens' tab for your project, and select the existing token or create a new one.)"
    flipper_token = gets

    # Read in the original .env file and update it with the token value
    text = File.read(source_env_file)
    updated_env_contents = text.gsub(/<YOUR-TOKEN>/, flipper_token)

    # Write the resulting .env file with the updated contents
    File.open(destination_env_file, "w") {|file| file.write(updated_env_contents) }
  end

  puts "== Installing dependencies =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")

  puts "\n== Creating demo feature flags =="
  system! "bin/rails flipper:initialize"

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Running tests =="
  # Explicitly set test mode since setup is run via dev
  system! "bin/rails db:environment:set RAILS_ENV=test"
  system! "bin/rails t"
  system! "bin/rails db:environment:set RAILS_ENV=development"
  system! "RAILS_ENV=development bin/rails db:seed:replant"

  puts "\n== Starting application server =="
  system! "bin/rails s"

  puts "\n== Preview the features"
  puts "open http://localhost:3000/flipper in a browser to view the features locally"

  puts "\n== Start the demo =="
  puts "open http://localhost:3000 in a browser, and start the demo"
end
