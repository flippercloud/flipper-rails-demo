<% content_for :breadcrumbs do %>
<ol class="breadcrumb breadcrumb-chevron p-3 bg-body-tertiary rounded-3">
  <li class="breadcrumb-item"><strong class="badge bg-secondary rounded rounded-pill m-0 fs-6">Demo</strong></li>
  <li class="breadcrumb-item"><a href="/">Basic Flag</a></li>
  <li class="breadcrumb-item"><a href="/demo/actors">Flags for Actors</a></li>
  <li class="breadcrumb-item active" aria-current="page">Flags for Groups</li>
</ol>
<% end %>

<h1>Group-based Feature Flipping</h1>

<p>We've toggled features for all users, and we've toggled features for a single user. Now let's <a href="https://www.flippercloud.io/docs/features#enablement-group">enable access for a group of users</a>. For that, we need to register the group and specify the conditions that determine whether a given actor is included in the group.</p>

<p>We'll use each user's beverage preference to determine whether the feature should be enabled. Since the new feature would only be relevant for coffee drinkers, we'll only enable it for them. Behind the scenes, we've registered the coffee drinker group with the following condition in <code>config/initializers/flipper.rb</code>:</p>

<pre><code style="display: block; margin-bottom: 1em;">
  Flipper.register(:coffee_drinkers) do |actor, context|
    actor.respond_to?(:coffee?) && actor.coffee?
  end
</code></pre>

<p><strong><mark>Important:</mark></strong> You may notice that we're verifying that the provided actor (which is any type of object that responds to <code>flipper_id</code>) responds to the <code>coffee?</code> method because any type of actor can be passed to the <code>enabled?</code> method, so we'll play it safe instead of assuming all actors will support a <code>coffee?</code> method.</p>

<fieldset>
  <legend>Enable a Feature Only for Coffee Drinkers</legend>

  <p>We've named this feature flag <code>demo_group</code>. We still pass <code>current_user</code> as the actor, but instead of having enabled the user directly, we'll enable the group and the current user would be enabled implicitly if they're a member of the coffee group.</p>

  <hr>

  <% if Flipper.enabled?(:demo_group) %>
    <p>The <code>demo_group</code> feature is <ins>enabled</ins> for everyone.</p>
  <% else %>
    <p>The <code>demo_group</code> feature is <del>disabled</del> for anyone that doesn't have special authorization.</p>
  <% end %>

  <% if Flipper.enabled?(:demo_group, @water_drinker) %>
    <p>The <code>demo_group</code> feature is <ins>enabled</ins> for water drinkers.</p>
  <% else %>
    <p>The <code>demo_group</code> feature is <del>disabled</del> for water drinkers.</p>
  <% end %>


  <% if Flipper.enabled?(:demo_group, @tea_drinker) %>
    <p>The <code>demo_group</code> feature is <ins>enabled</ins> for tea drinkers.</p>
  <% else %>
    <p>The <code>demo_group</code> feature is <del>disabled</del> for tea drinkers.</p>
  <% end %>

  <% if Flipper.enabled?(:demo_group, @coffee_drinker) %>
    <p>The <code>demo_group</code> feature is <ins>enabled</ins> for coffee drinkers.</p>
  <% else %>
    <p>The <code>demo_group</code> feature is <del>disabled</del> for coffee drinkers.</p>
  <% end %>

  <% if Flipper.enabled?(:demo_group, @coffee_drinker) %>
    <div class="example">
      <%= button_to "Disable for Coffee Drinkers", disable_path(feature: :demo_group, group: :coffee_drinkers), method: :delete %>
      <code>Flipper.disable_group(:demo_group, :coffee_drinkers)</code>
    </div>

    <hr>

    <% if current_user && Flipper.enabled?(:demo_group, current_user) %>
      <p>The <code>demo_group</code> feature is <ins>enabled</ins> for you since you prefer coffee.</p>
    <% else %>
      <p>The <code>demo_group</code> feature is <del>disabled</del> for you since you don't prefer coffee yet.</p>

      <p>Let's update your beverage preference&hellip;</p>

      <%= form_with model: current_user, method: :patch, url: user_path do |f| %>
        <%= f.text_field :beverage, value: 'coffee', hidden: true %>
        <%= f.submit "I Prefer Coffee!" %>
      <% end %>
    <% end %>

    <hr>

    <p>Nice work! Next we'll look at how you can enable features for a percentage of users.</p>
    <%= button_to "Learn How to Toggle Features for a Percentage of Users", demo_percentage_path, method: :get %>

  <% else %>
    <div class="example">
      <%= button_to "Enable for Coffee Drinkers", enable_path(feature: :demo_group, group: :coffee_drinkers), method: :post %>
      <code>Flipper.enable_group(:demo_group, :coffee_drinkers)</code>
    </div>
  <% end %>

</fieldset>

<% content_for :footer do %>
  <%= page_footer(__FILE__) %>
<% end %>
