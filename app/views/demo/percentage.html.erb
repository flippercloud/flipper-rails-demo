<h1>Percentage-based Feature Flipping</h1>

<p>We've toggled features for all users, a single user, and a specific group of users. Now we'll explore percentages where we can enable a feature for a <a href="https://www.flippercloud.io/docs/features#enablement-percentage-of-actors">percentage of actors</a> or for a <a href="https://www.flippercloud.io/docs/features#enablement-percentage-of-time">percentage of time</a>. As we're increasingly confident there aren't any surprise bugs or performance issues, we can gradually increase the percentage.</p>

<p>This is great for refactoring a significant portion of code so you can keep the legacy portion in place in parallel with the new code that's set to replace it, and you can slowly send more traffic down the new code path until you're confident it's generating the same results as the original.</p>

<fieldset>
  <legend>Enable a Feature for a Percentage of Actors</legend>

  <%= flash %>

  <p>We've named this feature flag <code>slow_roll</code> since we'll slowly roll it out to more users. We'll increase our percentage gradually in increments of 25% and see how it four different user accounts, including yours, are affected.</p>

  <hr>

  <% if Flipper.enabled?(:slow_roll, current_user) %>
    <p>The <code>slow_roll</code> feature is <ins>enabled</ins> for you.</p>
  <% else %>
    <p>The <code>slow_roll</code> feature is <del>disabled</del> for you.</p>
  <% end %>

  <%
    enabled_water_drinkers = 0
    enabled_tea_drinkers = 0
    enabled_coffee_drinkers = 0

    User.all.each do |user|
      next unless Flipper.enabled?(:slow_roll, user)

      if user.water?
        enabled_water_drinkers += 1
      elsif user.tea?
        enabled_tea_drinkers += 1
      elsif user.coffee?
        enabled_coffee_drinkers += 1
      end
    end
  %>
  <p>The <code>slow_roll</code> feature is <ins>enabled</ins> for
    <%= pluralize(enabled_water_drinkers, 'water drinker') %>, or
    <mark>about <%= number_to_percentage((enabled_water_drinkers * 100) / (User.water.any? ? User.water.count : 0), precision: 0) %>
    of the water drinkers</mark>.</p>

  <p>The <code>slow_roll</code> feature is <ins>enabled</ins> for
    <%= pluralize(enabled_tea_drinkers, 'tea drinker') %>,
    or <mark>about <%= number_to_percentage((enabled_tea_drinkers * 100) / (User.tea.any? ? User.tea.count : 0), precision: 0) %>
    of the tea drinkers</mark>.</p>

  <p>The <code>slow_roll</code> feature is <ins>enabled</ins> for
    <%= pluralize(enabled_coffee_drinkers, 'coffee drinker') %>, or
    <mark>about <%= number_to_percentage((enabled_coffee_drinkers * 100) / (User.coffee.any? ? User.coffee.count : 0), precision: 0) %>
    of the coffee drinkers</mark>.</p>

  <hr>

  <p><strong>Currently enabled for approximately <%= @current_percentage %>% of actors</strong>. This won't ever be an exact match for the percentage of enabled users due to the variables involved. The more total actors in the System, the closer this number will be to a precise percentage of overall users.</p>

  <% if @current_percentage == 100 %>
    <hr>

    <div class="example">
      <%= button_to "Start Over", disable_path(feature: :slow_roll, percentage: 0), method: :delete %>
      <code>Flipper.disable(:slow_roll)</code>
    </div>

    <hr>

    <p>Nice work! That covers the basics of feature toggling, but we've glossed over some details.</p>

    <p>While you've been toggling features directly in the demo up until now, that's not really ideal. And that's where Flipper Cloud comes in. You've already set up an accounts, so now let's go take a look and see what all of this feature toggling has done behind the scenes.</p>
    <%= button_to "Visit Your Flipper Cloud Account", 'https://flippercloud.io', method: :get %>

  <% else %>
    <hr>
    <div class="example">
      <%= button_to "Increase by 25%", enable_path(feature: :slow_roll, percentage: @current_percentage + 25), method: :post %>
      <code>Flipper.enable_percentage_of_actors(:slow_roll, <%= @current_percentage + 25 %>)</code>
    </div>
  <% end %>

</fieldset>

<%= page_footer(__FILE__) %>
